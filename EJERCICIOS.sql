--1
SELECT A.NOM_AVION, A.MODELO_AVION, L.NOM_LINEA
FROM AVIONES A
JOIN LINEAS_AEREAS L ON A.COD_LINEA = L.COD_LINEA
WHERE A.COD_AVION IN (
    SELECT V.COD_AVION
    FROM VUELOS V
    GROUP BY V.COD_AVION
    HAVING COUNT(V.COD_VUELO)=(
    SELECT MAX(COUNT_VUELOS) FROM(
            SELECT COUNT(*) AS COUNT_VUELOS
            FROM VUELOS
            GROUP BY COD_AVION)));
--2
SELECT P.NOM_PASAJERO || ' ' || P.APE_PASAJERO AS "Nombre y Apellidos",V.ORIGEN_VUELO,V.DESTINO_VUELO,R.PRECIO,V.FECHA_VUELO
FROM RESERVAS R
JOIN 
VUELOS V ON R.COD_VUELO = V.COD_VUELO
JOIN 
PASAJEROS P ON R.COD_PASAJERO = P.COD_PASAJERO
WHERE V.FECHA_VUELO BETWEEN SYSDATE AND SYSDATE + 2 
AND R.PRECIO > (
    SELECT AVG(PRECIO)
    FROM RESERVAS);
    
    
SELECT *
FROM VUELOS
WHERE TRUNC(FECHA_VUELO) BETWEEN TO_DATE('26/05/2023', 'DD/MM/YYYY') AND TO_DATE('27/05/2023', 'DD/MM/YYYY');


--3
SELECT P.NOM_PASAJERO || ' ' || P.APE_PASAJERO AS NOMBRE_COMPLETO, P.DIR_PASAJERO, L.NOM_LINEA
FROM PASAJEROS P
JOIN 
RESERVAS R ON P.COD_PASAJERO = R.COD_PASAJERO
JOIN 
VUELOS V ON R.COD_VUELO = V.COD_VUELO
JOIN 
AVIONES A ON V.COD_AVION = A.COD_AVION
JOIN 
LINEAS_AEREAS L ON A.COD_LINEA = L.COD_LINEA
WHERE L.NOM_LINEA = 'IBERIA'
ORDER BY NOMBRE_COMPLETO;

--4
UPDATE RESERVAS
SET PRECIO = PRECIO * 0.6
WHERE COD_AGENCIA <= ALL (
    SELECT COD_AGENCIA
    FROM (
        SELECT COD_AGENCIA, SUM(PRECIO) AS SUMA
        FROM RESERVAS
        GROUP BY COD_AGENCIA
    )
);
---5
INSERT INTO RESERVAS
SELECT 
    (SELECT COD_VUELO FROM VUELOS WHERE ORIGEN_VUELO = 'TAIPÉI' AND DESTINO_VUELO = 'YAKARTA'),
    COD_PASAJERO,
    (SELECT COD_AGENCIA FROM AGENCIAS WHERE NOM_AGENCIA='PANORAMAS'),
    0
FROM PASAJEROS 
JOIN RESERVAS  using(COD_PASAJERO)
JOIN AGENCIAS USING(COD_AGENCIA)
WHERE NOM_AGENCIA = 'PANORAMAS';



--PL----------------
DROP TABLE AUDITA_PASAJEROS CASCADE CONSTRAINTS;
CREATE TABLE AUDITA_PASAJEROS (
    FECHA_HORA    DATE,
    OPERACION     VARCHAR2(1000),
    ANTERIOR      VARCHAR2(1000),
    NUEVO         VARCHAR2(1000)
);

CREATE OR REPLACE TRIGGER AUDITAPASAJEROS
AFTER INSERT OR UPDATE OR DELETE ON PASAJEROS
FOR EACH ROW
DECLARE
    v_operation VARCHAR2(2000);
BEGIN
    IF INSERTING THEN
        v_operation := 'El usuario ' || USER || ' ha INSERTADO en pasajeros ' || 'un nuevo pasajero con los datos: cod_pasajero ' || :NEW.COD_PASAJERO || ', nombre ' || :NEW.NOM_PASAJERO || 
            ', apellidos ' || :NEW.APE_PASAJERO || ', dirección ' || :NEW.DIR_PASAJERO || 
            ' a día y hora ' || TO_CHAR(SYSDATE,'DD/MM/YYYY, hh24:mi:ss');
        
        INSERT INTO AUDITA_PASAJEROS (operacion)
        VALUES (v_operation);
    END IF;

    IF UPDATING THEN
        IF UPDATING('NOM_PASAJERO') OR UPDATING('APE_PASAJERO') OR UPDATING('DIR_PASAJERO') THEN
            v_operation := 'El usuario ' || USER || ' ha MODIFICADO en pasajeros ' ||
                'a día y hora ' || TO_CHAR(SYSDATE,'DD/MM/YYYY, hh24:mi:ss') || 
                ' el cod_pasajero ' || :OLD.COD_PASAJERO ||
                ' cambiando el nombre de ' || :OLD.NOM_PASAJERO || ' a ' || :NEW.NOM_PASAJERO || 
                ', los apellidos de ' || :OLD.APE_PASAJERO || ' a ' || :NEW.APE_PASAJERO || 
                ', la dirección de ' || :OLD.DIR_PASAJERO || ' a ' || :NEW.DIR_PASAJERO;
        
            INSERT INTO AUDITA_PASAJEROS (operacion)
            VALUES (v_operation);
        END IF;
    END IF;

    IF DELETING THEN
        v_operation := 'El usuario ' || USER || ' ha BORRADO en pasajeros ' ||
            'un pasajero con los datos: cod_pasajero ' || :OLD.COD_PASAJERO || ', nombre ' || :OLD.NOM_PASAJERO || 
            ', apellidos ' || :OLD.APE_PASAJERO || ', dirección ' || :OLD.DIR_PASAJERO || 
            ' a día y hora ' || TO_CHAR(SYSDATE,'DD/MM/YYYY, hh24:mi:ss');
        
        INSERT INTO AUDITA_PASAJEROS (operacion)
        VALUES (v_operation);
    END IF;
END;

--COMPROBACIONES
INSERT INTO PASAJEROS (COD_PASAJERO, APE_PASAJERO, NOM_PASAJERO, DIR_PASAJERO, TEL_PASAJERO)
VALUES (34541, 'messi', 'cristiano', 'Calle 123 messi', '235342323');

UPDATE PASAJEROS
SET DIR_PASAJERO = 'Calle 2332 messi'
WHERE COD_PASAJERO = 34541;

DELETE FROM PASAJEROS
WHERE COD_PASAJERO = 34541;

SELECT * FROM AUDITA_PASAJEROS;

--PL2
CREATE OR REPLACE PROCEDURE VUELOS_PASAJEROS_AVION (AVION NUMBER) IS
    CURSOR CVUELOS IS SELECT * FROM VUELOS WHERE COD_AVION = AVION;
    CONT_PASAJEROS_VUELO NUMBER := 0;
    CONT_PASAJEROS_AVION NUMBER := 0;
    NOMBRE_AVION VARCHAR2(30);
BEGIN
    SELECT NOM_AVION INTO NOMBRE_AVION FROM AVIONES WHERE COD_AVION = AVION;
    DBMS_OUTPUT.PUT_LINE('NOMBRE DEL AVION: ' || NOMBRE_AVION);
    DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------------------');

        DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------------------');
        DBMS_OUTPUT.PUT_LINE('DESTINO VUELO: ' || REGVUELO.DESTINO_VUELO);
        DBMS_OUTPUT.PUT_LINE('FECHA VUELO: ' || TO_CHAR(REGVUELO.FECHA_VUELO, 'DD/MM/YYYY'));
        DBMS_OUTPUT.PUT_LINE('NÚMERO PASAJEROS VUELO: ' || CONT_PASAJEROS_VUELO);

        CONT_PASAJEROS_AVION := CONT_PASAJEROS_AVION + CONT_PASAJEROS_VUELO;
    END LOOP;

    DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------------------');
    DBMS_OUTPUT.PUT_LINE('NÚMERO TOTAL DE PASAJEROS AVIÓN: ' || CONT_PASAJEROS_AVION);
    DBMS_OUTPUT.PUT_LINE('----------------------------------------------------------------------------');
END;


SET SERVEROUTPUT ON;
DECLARE
    v_avion NUMBER;
BEGIN
    v_avion := &avion;
    VUELOS_PASAJEROS_AVION(v_avion);
END;




















